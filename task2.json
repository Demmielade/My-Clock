[
    {
        "name": "TestBuild::test_build",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_bigquery",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_clickhouse",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_duckdb",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_enum",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_hive",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_mysql",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_oracle",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_postgres",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_presto",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_snowflake",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_spark",
        "status": "FAILED"
    },
    {
        "name": "TestDialects::test_sqlite",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_starrocks",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_tableau",
        "status": "PASSED"
    },
    {
        "name": "TestDialects::test_trino",
        "status": "PASSED"
    },
    {
        "name": "TestDiff::test_cte",
        "status": "PASSED"
    },
    {
        "name": "TestDiff::test_join",
        "status": "PASSED"
    },
    {
        "name": "TestDiff::test_node_position_changed",
        "status": "PASSED"
    },
    {
        "name": "TestDiff::test_simple",
        "status": "PASSED"
    },
    {
        "name": "TestDiff::test_window_functions",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_alias",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_alias_column_names",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_alias_or_name",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_arg_key",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_column",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_ctes",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_depth",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_eq",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_find",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_find_all",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_find_ancestor",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_function_normalizer",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_functions",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_hash",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_named_selects",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_replace",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_selects",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_sql",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_text",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_transform_multiple_children",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_transform_no_infinite_recursion",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_transform_simple",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_transform_with_arguments",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_unit",
        "status": "PASSED"
    },
    {
        "name": "TestExpressions::test_walk",
        "status": "PASSED"
    },
    {
        "name": "TestGenerator::test_fallback_function_sql",
        "status": "PASSED"
    },
    {
        "name": "TestGenerator::test_fallback_function_var_args_sql",
        "status": "PASSED"
    },
    {
        "name": "TestHelper::test_tsort",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_eliminate_subqueries",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_expand_multi_table_selects",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_file_schema",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_isolate_table_selects",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_normalize",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_optimize",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_optimize_joins",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_pushdown_predicates",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_pushdown_projection",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_qualify_columns",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_qualify_columns__invalid",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_qualify_tables",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_quote_identities",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_schema",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_scope",
        "status": "PASSED"
    },
    {
        "name": "TestOptimizer::test_simplify",
        "status": "FAILED"
    },
    {
        "name": "TestOptimizer::test_tpch",
        "status": "FAILED"
    },
    {
        "name": "TestOptimizer::test_unnest_subqueries",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_annotations",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_column",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_command",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_comment_error_n",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_comment_error_r",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_expression",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_identify",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_missing_by",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_multi",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_parse_empty",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_parse_errors",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_parse_into",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_pretty_config_override",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_select",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_space",
        "status": "PASSED"
    },
    {
        "name": "TestParser::test_table",
        "status": "PASSED"
    },
    {
        "name": "TestTime::test_format_time",
        "status": "PASSED"
    },
    {
        "name": "TestTime::test_unalias_group",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_alias",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_asc",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_comments",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_error_level",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_extract",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_identity",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_if",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_ignore_nulls",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_index_offset",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_not_range",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_paren",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_partial",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_pretty",
        "status": "FAILED"
    },
    {
        "name": "TestTranspile::test_some",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_space",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_time",
        "status": "PASSED"
    },
    {
        "name": "TestTranspile::test_types",
        "status": "PASSED"
    }
]