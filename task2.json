[
    {
        "name": "axlearn/common/adapter_flax_test.py::FlaxLayerTest::test_custom_module_call ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_qkv_equality0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_qkv_equality1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_qkv_equality2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::PerDimScaleTest::test_per_dim_scale0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::PerDimScaleTest::test_per_dim_scale1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_flax_test.py::FlaxLayerTest::test_feed_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::PreventParamBroadcastTest::test_broadcast_blocked ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::PerDimScaleTest::test_per_dim_scale2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TorchDefaultModulesTest::test_embedding_module ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::NormalizationModulesTest::test_rmsnorm_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleQueryTest::test_scale_query7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::NormalizationModulesTest::test_rmsnorm_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleKeyTest::test_scale_key0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::NormalizationModulesTest::test_rmsnorm_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleKeyTest::test_scale_key1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleKeyTest::test_scale_key2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ScaleKeyTest::test_scale_key3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_attention_mask_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_attention_mask_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_attention_mask_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_slopes0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_slopes1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_slopes2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_alibi_slopes3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_all_mask0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_all_mask1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_data_types0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_data_types1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_data_types2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_bottleneck_adapter_transformer_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_data_types3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_bottleneck_adapter_transformer_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_bottleneck_adapter_transformer_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_bottleneck_adapter_transformer_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_data_types4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_causal_attention_mask_layer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_data_types5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_multihead_attention_layer_extend0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_multihead_attention_layer_extend1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_multihead_attention_layer_extend2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_multihead_attention_layer_extend3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_qkv_projection_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_qkv_projection_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_qkv_projection_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_qkv_projection_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_stacked_transformer_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_input_linear_variants0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_input_linear_variants1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_invalid_key_value_combinations_raise ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_stacked_transformer_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_extend0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_extend1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_extend2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_extend3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_attention_layer_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_feed_forward_layer9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionModulesTest::test_transformer_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_extend_step9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::TransformerEmbeddingsTest::test_transformer_embeddings_forward9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_prefill_states9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_kv_heads ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::DecoderTest::test_decoder_inference ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::DecoderTest::test_segment_ids_from_causal_input_ids0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::DecoderTest::test_segment_ids_from_causal_input_ids1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_scale_query_key0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_scale_query_key1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_scale_query_key2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_scale_query_key3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_scale_query_key_barrier ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_scale_query_key_dim_dependence ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::VisionTransformerModulesTest::test_vit_model0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_multihead_attention_xl ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_per_dim_scale0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::VisionTransformerModulesTest::test_vit_model1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_per_dim_scale1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_per_dim_scale2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_per_dim_scale3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_rel_pos_to_abs_pos ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerXLTest::test_xl_attention_logits ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step120 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step121 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step122 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step123 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step124 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step125 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step126 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerTest::test_against_roberta_attention ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step127 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step128 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CausalLmModelModulesTest::test_causal_lm_v1_from_args ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step129 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::TransformerTest::test_against_roberta_layer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step130 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step131 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step132 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step133 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AdapterCausalLmModelModulesTest::test_adapter_causal_lm_v1_from_args ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step134 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step135 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step136 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step137 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step138 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step139 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step140 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step141 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step142 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step143 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states120 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states121 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states122 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states123 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states124 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states125 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states126 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states127 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states128 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states129 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states130 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states131 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states132 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states133 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_greedy_decoding0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states134 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states135 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states136 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states137 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states138 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states139 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states140 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states141 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states142 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states143 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_greedy_decoding1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_sample_decoding_session ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_sample_decoding_session_exceed_length ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_scale_by ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_k_logits_modifier_with_ties0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_k_logits_modifier_with_ties1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_k_logits_modifier_with_ties2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_k_logits_modifier_without_ties0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_k_logits_modifier_without_ties1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_k_logits_modifier_without_ties2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_p_logits_modifier_without_ties0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_p_logits_modifier_without_ties1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_p_logits_modifier_without_ties2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_p_logits_modifier_without_ties3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::SampleDecodingTest::test_top_p_logits_modifier_without_ties4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_pipeline_of_repeats ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::AttentionPoolingTest::test_attention_pooling9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_extend_step99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_pipeline_of_stacks ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_forward18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadAttentionTest::test_gqa_prefill_states90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_value_types ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/adapter_torch_test.py::CoCaImageStreamEncoderTest::test_coca_image_stream_encoder9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MaskTest::test_apply_attention_logit_biases ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MaskTest::test_causal_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MaskTest::test_segment_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::CausalAttentionLogitBiasLayerTest::test_causal_attention_mask_layer9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::FullAttentionLogitBiasLayerTest::test_full_attention_mask_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::FullAttentionLogitBiasLayerTest::test_full_attention_mask_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::FullAttentionLogitBiasLayerTest::test_full_attention_mask_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::FullAttentionLogitBiasLayerTest::test_full_attention_mask_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::FullAttentionLogitBiasLayerTest::test_full_attention_mask_layer4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::FullAttentionLogitBiasLayerTest::test_full_attention_mask_layer5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ALiBiAttentionLogitBiasLayerTest::test_alibi_attention_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_pipeline_remat_everything_saveable ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ALiBiAttentionLogitBiasLayerTest::test_packing0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_against_fairseq ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_attention_logit_biases0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_attention_logit_biases1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_attention_logit_biases2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ALiBiAttentionLogitBiasLayerTest::test_packing1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_attention_logit_biases3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_attention_logit_biases4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_rel_pos_emb ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_repeated_conformer_config ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ALiBiAttentionLogitBiasLayerTest::test_packing2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::SymmetricALiBiAttentionLogitBiasLayerTest::test_alibi_attention_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_apply_rotary_position_embeddings0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_apply_rotary_position_embeddings1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_apply_rotary_position_embeddings2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_apply_rotary_position_embeddings3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_apply_rotary_position_embeddings4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_apply_rotary_position_embeddings5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_repeat ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_repeat_bfloat16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_emb_out_of_seq ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_repeated_conformer_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_respect_paddings0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/conformer_test.py::ConformerLayerTest::test_respect_paddings1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_self_attention0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingTest::test_rope_self_attention1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::RelativePositionTest::test_relative_position_bucket_against_hf9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_repeat_remat_everything_saveable ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_against_llama_for_apply_rotary_emb ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_against_llama_for_attention ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_against_llama_for_precompute_freqs_cis0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_against_llama_for_precompute_freqs_cis1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::RoFormerSinusoidalPositionalEmbeddingAgainstLLaMATest::test_roformer_qkv_linear9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadLinearInitTest::test_compute_fan_axes0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stack_vs_repeat_with_build_remat_spec ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadLinearInitTest::test_compute_fan_axes1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::MultiheadLinearInitTest::test_compute_fan_axes2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::QKVLinearTest::test_num_kv_heads7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stacked_transformer_with_seq_layer_cfgs0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stacked_transformer_with_seq_layer_cfgs1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stochastic_depth0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stochastic_depth1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stochastic_depth2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_stochastic_depth3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_attention_bias9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_extend_step0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DisentangledSelfAttentionTest::test_disentangled_self_attention36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_extend_step1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb120 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb121 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder120 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb122 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb123 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb120 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb121 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder121 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb124 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb125 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb122 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb123 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb126 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb127 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb124 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb125 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder122 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb126 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb127 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder123 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_extend_step2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder124 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder125 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder126 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder127 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_extend_step3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_prefill_states0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_prefill_states1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_prefill_states2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaModelTest::test_context_pooler ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_emb98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestAdaptiveLayerNormModulation::test_adaln ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestDiTFFN::test_dit_ffn ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestDiTAttn::test_dit_attn ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestDiTBlock::test_dit_block ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestDiTFinalLayer::test_dit_attn ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaModelTest::test_deberta_v2_sequence_classification0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestDiTPatchEmbed::test_dit_patch_embed ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_against_hf_bert_embeddings0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_against_hf_bert_embeddings1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_against_hf_bert_embeddings2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_against_hf_bert_embeddings3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_embed_attend0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_embed_attend1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_embed_attend2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/embedding_test.py::TestTransformerTextEmbeddings::test_embed_attend3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaModelTest::test_deberta_v2_sequence_classification1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::StackedTransformerTest::test_transformer_prefill_states3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::ConfigHelperTest::test_set_double_shard_weights_config_for_list_of_configs7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::PositionalEmbeddingTest::test_learned_positional_embedding_1d ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::test_next_power_of_two[300-512] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::test_next_power_of_two[127.1-128] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::test_next_power_of_two[128-128] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::test_next_power_of_two[0.1-2] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::BottleNeckAdapterTransformerLayerTest::test_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::BottleNeckAdapterTransformerLayerTest::test_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/attention_test.py::BottleNeckAdapterTransformerLayerTest::test_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_activation_summary0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_activation_summary1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_activation_summary2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_activation_summary_toy_example0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_activation_summary_toy_example1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_apply_parameter_noise_recursively0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_apply_parameter_noise_recursively1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_apply_parameter_noise_recursively2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_intermediate_output ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_no_remat ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_no_remat_inheritance ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_parent_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_remat_causes_additional_forwards ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::BaseLayerTest::test_remat_name ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::ComputeFanAxesTest::test_fan0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::ComputeFanAxesTest::test_fan1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::ComputeFanAxesTest::test_fan2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/base_layer_test.py::ComputeFanAxesTest::test_fan_axes_in_create_parameter_specs_recursively ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_attention_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_dropout_rate ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_for_mlm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_for_mlm_with_padding ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_layer_norm_cfg0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_layer_norm_cfg1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_layer_norm_cfg2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_loss_metrics ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_multiple_choice_classification ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_sequence_binary_classification0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_sequence_binary_classification1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_sequence_classification0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_sequence_classification1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/bert_test.py::BertTest::test_sequence_classification2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::Gpt2TransformerTest::test_against_hf_gpt2_lm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelMetricsTest::test_constrain_input_batch ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelMetricsTest::test_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelMetricsTest::test_metrics ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode10 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/causal_lm_test.py::ModelAuxLossTest::test_aux_loss9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_best_metric_policy0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_best_metric_policy1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_best_metric_policy2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_best_metric_policy3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_best_metric_policy_value_error ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_check_state_structure_contains_state ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_check_state_structure_contains_state_up_to_dtype ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_check_state_structure_exact ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_check_state_structure_exact_up_to_dtype ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_context ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_custom_dict0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_every_n_steps_and_last_policy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_every_n_steps_policy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_every_n_steps_policy_min_step ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_garbage_collection ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_gda0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_gda1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_gda2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_input_iterator ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_latest_checkpoint_path ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_read_state_spec ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_save_and_restore ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_save_and_restore_latest_valid ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_stop ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::CheckpointerTest::test_stop_on_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::TensorStoreStateStorageTest::test_save_and_restore_from_dir0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::TensorStoreStateStorageTest::test_save_and_restore_from_dir1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::TensorStoreStateStorageTest::test_save_and_restore_from_dir2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::TensorStoreStateStorageTest::test_save_and_restore_from_dir3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/checkpointer_test.py::TfIteratorTest::test_restored_iterator_resumes ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_clone ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_function0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_function1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_function2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_function3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_function4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_function5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_noncopyable_class ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_for_noncopyable_function ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_inheritance ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_config_inheritance_field_redefinition ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_definition ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_instantiable_config_for_configurable ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_instantiable_config_from_function_signature ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_instantiable_config_from_init_signature ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_invalid_base_class ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_invalid_field_name ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_maybe_set_config ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_missing_decorator ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_mutable_values ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_nested_configs ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_non_config_field ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_required_values ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_set ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_dict_and_debug_string ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_dict_with_defaultdict ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/config_test.py::ConfigTest::test_to_flat_dict_omit_default_values26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_str_tensor_pop_merge_roundtrip0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_str_tensor_pop_merge_roundtrip1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_str_tensor_pop_merge_roundtrip2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_composite_test.py::BatchTest::test_concatenation0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_composite_test.py::BatchTest::test_concatenation1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_composite_test.py::BatchTest::test_zipinput0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_composite_test.py::BatchTest::test_zipinput1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_multiple_choice_postprocess ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_multiple_choice_preprocess0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_multiple_choice_preprocess1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_sentence0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_sentence1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_sentence2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_sentence3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_sentence_pair0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_fake_sentence_pair1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_input_key ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForRobertaTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_multiple_sequence_truncation0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_multiple_sequence_truncation1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_multiple_sequence_truncation2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_multiple_sequence_truncation3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_preprocess_record0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_preprocess_record1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::TestUtils::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_add_prefix_concat_sequence_pair0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_add_prefix_concat_sequence_pair1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_add_prefix_concat_sequence_pair2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_add_prefix_concat_sequence_pair3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_add_prefix_concat_sequence_pair4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_make_glue_autoregressive_inputs0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_make_glue_autoregressive_inputs1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_make_glue_autoregressive_inputs2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_make_glue_autoregressive_inputs3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_glue_test.py::InputGlueForT5Test::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_augment_text_from_inputs_targets_pretokenized0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_fake_text_lm_training_data ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_fake_text_lm_training_data_eval ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor5 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor6 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor7 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor8 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_lm_from_seq2seq_text_preprocessor9 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_make_autoregressive_inputs_passthrough_keys0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_make_autoregressive_inputs_passthrough_keys1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_make_autoregressive_inputs_passthrough_keys2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_make_autoregressive_inputs_passthrough_keys3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_make_autoregressive_inputs_passthrough_keys4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_training_lm_processor_single_example0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmTrainingInputTest::test_training_lm_processor_single_example1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmEvalInputTest::test_eval_lm_processor_single_example0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmEvalInputTest::test_eval_lm_processor_single_example1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmEvalInputTest::test_eval_lm_processor_single_example2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::LmEvalInputTest::test_fake_text_lm_eval_data ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input5 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_fake_text2text_lm_input6 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_original_keys ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing5 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_packing6 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_lm_test.py::Seq2SeqInputTest::test_trim_and_pack_with_segments0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_apply_mlm_mask0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_apply_mlm_mask1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_apply_mlm_mask_element_spec ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_apply_mlm_mask_translation0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_apply_mlm_mask_translation1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_apply_mlm_mask_validation ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_ids_to_word_starts ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTest::test_whole_word_mask ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTestCombinatorialNgram::test_apply_mlm_mask_combinatorial_ngram ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::ApplyMLMTestCombinatorialNgram::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode11 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions_combinatorial_ngram0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions_combinatorial_ngram1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions_combinatorial_ngram2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions_combinatorial_ngram3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions_combinatorial_ngram4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_roberta_mlm_actions_combinatorial_ngram5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_validate_mlm_actions0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MLMActionsTest::test_validate_mlm_actions1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MaskedLmInputTest::test_fake_text_data0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MaskedLmInputTest::test_fake_text_data1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MaskedLmInputTest::test_fake_text_data2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MaskedLmInputTest::test_fake_text_data3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MaskedLmInputTest::test_filtering ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_mlm_test.py::MaskedLmInputTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_ranking_test.py::RankByValueTest::test_rank_by_value_unsupported_shape ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_build_example_dataset_fn0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_build_example_dataset_fn1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_build_example_dataset_fn2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_build_example_dataset_fn3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_count0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_count1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_count2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_doc_stride_overlap0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_doc_stride_overlap1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_doc_stride_overlap2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_outputs0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_outputs1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_convert_example_to_features_outputs2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_examples_to_jsonl_dataset0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_examples_to_jsonl_dataset1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_examples_to_jsonl_dataset2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_examples_to_jsonl_dataset3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_hf_tokenizer_for_rc ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_parse_examples_jsonl0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_parse_examples_jsonl1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_parse_examples_jsonl2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_parse_examples_jsonl3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_reading_comprehension_test.py::InputReadingComprehensionTest::test_parse_examples_jsonl4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_apply_t5_mask0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_apply_t5_mask1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_apply_t5_mask2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_apply_t5_mask3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_apply_t5_mask4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_make_t5_autoregressive_inputs0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_make_t5_autoregressive_inputs_validation ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_map_prefix_to_value0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_map_prefix_to_value1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_map_prefix_to_value2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_map_prefix_to_value3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_noise_span_to_unique_sentinel0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_noise_span_to_unique_sentinel1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_noise_span_to_unique_sentinel2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_noise_span_to_unique_sentinel3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_noise_span_to_unique_sentinel4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_nonnoise_span_to_unique_sentinel0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_nonnoise_span_to_unique_sentinel1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_nonnoise_span_to_unique_sentinel2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_nonnoise_span_to_unique_sentinel3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_nonnoise_span_to_unique_sentinel4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_segmentation0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_segmentation1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_segmentation2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_helper0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_helper1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_helper2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_helper3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_noise_mask0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_noise_mask1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_noise_mask2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_noise_mask3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_random_spans_noise_mask4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_reduce_concat_tokens0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_reduce_concat_tokens1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_reduce_concat_tokens2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_reduce_concat_tokens3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_reduce_concat_tokens4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_select_random_chunk0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_select_random_chunk1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_select_random_chunk2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_select_random_chunk3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_select_random_chunk4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_select_random_chunk5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_split_tokens0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_split_tokens1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_split_tokens2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_t5_test.py::T5InputTest::test_split_tokens3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents_invalid_normalization0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StripAccentsTest::test_strip_accents_invalid_normalization1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_multiple_examples0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_multiple_examples1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_single_example0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_single_example1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_single_example2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_single_example3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::AddTokenTypeIDTest::test_add_token_type_ids_single_example4 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TokenizeExampleTest::test_tokenize_example0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::NumBytesTest::test_num_bytes0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StringsPackUnpackByteArrayTest::test_pack_too_long_string_raises ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::StringsPackUnpackByteArrayTest::test_pack_unpack_strings_is_lossless ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_split_sentences ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_split_sentences_keys ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_split_sentences_sampling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_split_sentences_sampling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_split_sentences_sampling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestSplitSentences::test_split_sentences_sampling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestRandomChunking::test_random_chunking ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestRandomChunking::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_bert_normalize_against_hf0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_bert_normalize_against_hf1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize_ragged_input0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize_ragged_input1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize_ragged_input2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_normalize_ragged_input3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::TestTextNormalize::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_text_test.py::PreprocessTextTest::test_preprocess_chunks ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::SamplingTest::test_sampling_dataset ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::SamplingTest::test_sampling_dataset_basic0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::SamplingTest::test_sampling_dataset_basic1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::SamplingTest::test_sampling_dataset_basic2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ConcatenateDatasetsTest::test_concatenates_in_order ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ConcatenateDatasetsTest::test_noop_for_one ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ConcatenateDatasetsTest::test_raises_when_empty ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_examples0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode12 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_encoder99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_examples1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_examples2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_examples3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_shards0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_shards1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_shards2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_infer_num_shards3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_maybe_shard_examples0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_maybe_shard_examples1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_maybe_shard_examples2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_maybe_shard_examples3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_decoders0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_decoders1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_decoders2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_decoders3 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_decoders_ci0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_decoders_ci1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_read_config0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_read_config1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_read_config_with_custom_sharding0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TfdsTest::test_tfds_read_config_with_custom_sharding1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_infer_cardinality0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_infer_cardinality1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_infer_cardinality2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_for_evaluation ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_logical_feed9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_physical_feed0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_physical_feed1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_physical_feed2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_physical_feed3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_physical_feed4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadTest::test_pad_logical_to_physical_for_physical_feed5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_batch_for_logical_feed_index0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_batch_for_logical_feed_index1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_batch_for_physical_feed_index0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_batch_for_physical_feed_index1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_eval_pad0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_eval_pad1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_post_batch_map_fn0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_post_batch_map_fn1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_post_batch_map_fn2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_post_batch_map_fn3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_prefetch_buffer_size0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_prefetch_buffer_size1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_prefetch_buffer_size2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_prefetch_buffer_size3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_repeat0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_repeat1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_repeat2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_repeat3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_repeat4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::BatchTest::test_repeat5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::UnpackTest::test_unpack_flattens_nested_path ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_changes_element_spec ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_does_not_map_falsey_reference_keys_with_none_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_does_not_map_missing_reference_keys_with_none_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_does_nothing_empty_keymap ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_maps_falsey_reference_keys_to_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_maps_new_keys0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_maps_new_keys1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::RekeyTest::test_rekey_maps_original_inputs_if_asked ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ProcessorsTest::test_processor_for_sample_from_dataset ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ProcessorsTest::test_remove_fields ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ProcessorsTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ProcessorsTest::test_squeeze_fields ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_single_index0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_single_index1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_single_index2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_single_index3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_slice0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_slice1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ExtractFromSequenceTest::test_extract_slice2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers107 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PreserveElementSpecTest::test_preserve_element_spec ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::WithProcessorTest::test_with_processor ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::WithProcessorTest::test_with_processor_optional_fields ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::AddStaticFieldsTest::test_add_static_fields ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadToBatchTest::test_pad_to_batch0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PadToBatchTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_pack_to_batch0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_pack_to_batch1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers108 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_pack_to_batch2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_pack_to_batch3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode13 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_trim_and_pack_to_batch0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers109 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::PackTest::test_trim_and_pack_to_batch1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ConvertRaggedTensorTest::test_ragged_to_tensor0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ConvertRaggedTensorTest::test_ragged_to_tensor1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::ConvertRaggedTensorTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_non_zero_pad_id0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::TrimAndPadTest::test_trim_and_pad_tensor_nd0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/input_tf_data_test.py::DisableShuffleRecursivelyTest::test_disable_shuffle_recursively ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_batch_norm0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_batch_norm1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_batch_norm2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers110 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers111 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_binary_classification_metric9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_classification_metric0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_classification_metric1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_classification_metric2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_classification_metric3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers112 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_compute_moments0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers113 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_compute_moments1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_compute_moments2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers114 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_compute_moments3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv1d_w3s1_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv1d_w3s1_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv1d_w4s1_CAUSAL ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv1d_w4s1_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_1x1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_2x2_S2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_2x2_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers115 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_2x2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_3x3_GROUPS4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_3x3_S2_PADDING1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_3x3_S2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_3x3_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_3x3_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers116 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers117 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers118 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers119 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers120 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode14 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers121 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_1x1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers122 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers123 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_2x2_S2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_2x2_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers124 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers125 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers126 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_2x2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers127 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_3x3_S2_PADDING1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_3x3_S2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_3x3_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv2d_with_1d_padding_3x3_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_1x1x1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_2x2x2_S2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_2x2x2_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_2x2x2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_3x3x3_GROUPS4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_3x3x3_S2_PADDING1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_3x3x3_S2_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_3x3x3_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv3d_3x3x3_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_output_1d_padding0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_output_1d_padding1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_output_1d_padding2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_conv_padding_lingvo9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_deconv2d_2x2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_deconv2d_2x2_S2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_deconv2d_3x3_S2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_depthwise_conv1d_w3s1_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode15 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_depthwise_conv1d_w3s1_VALID ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_depthwise_conv1d_w4s1_CAUSAL ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_depthwise_conv1d_w4s1_SAME ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_drop_tokens0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_drop_tokens1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_drop_tokens2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_drop_tokens3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_activation_fn7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_get_stochastic_depth_linear_rate8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_group_norm0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_group_norm1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_group_norm2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_group_norm3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_group_norm4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_group_norm5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_hingeloss_metric9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_l2_norm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_layer_norm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_layer_norm_against_torch ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_layer_norm_statefree ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_linear ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_maxpool2d_2x2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_maxpool2d_2x2_S2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_maxpool2d_3x3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_maxpool2d_3x3_S2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_multilinear_fan_axes ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_rms_norm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_separable_space_time_positional_embedding_batched_positions ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_separable_space_time_positional_embedding_first_patch_positions ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_separable_space_time_positional_embedding_simple ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_squeeze_excitation9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_consistent_outputs8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_over_time0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_over_time1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_over_time2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_over_time_data_change ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_vs_conv2d_output_len_match0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_vs_conv2d_output_len_match1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stack_vs_conv2d_output_len_match2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_stochastic_depth9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_unit_norm_linear ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_variational_noise0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::LayerTest::test_variational_noise1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_attend9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::EmbedTest::test_embed_lookup9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::RedirectToSharedModuleTest::test_deeply_nested ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::SetConfigTest::test_set_bias ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::SetConfigTest::test_set_dropout_rate_recursively ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::SetConfigTest::test_set_layer_norm_eps_recursively ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/layers_test.py::SetConfigTest::test_set_norm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_learner0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_learner1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_per_variable_summaries ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_all_updates_c ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_all_updates_v ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_no_update_c ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_no_update_v ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_on_vdict_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_on_vdict_no_update ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_optimizers_c ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_optimizers_v ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_state_updates_c ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::LearnerTest::test_update_rules_state_updates_v ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::CompositeLearnerTest::test_learner0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::CompositeLearnerTest::test_learner1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::CompositeLearnerTest::test_learner_config ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/learner_test.py::CompositeLearnerTest::test_sublearner_ema ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/liveness_monitor_test.py::TfSummaryMonitorTest::test_ping ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_chain ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier_with_low_temperature0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier_with_low_temperature1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_scale_by_modifier_with_low_temperature2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_k_modifier0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_k_modifier1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_k_modifier2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_k_modifier_with_ties ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier_with_ties0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier_with_ties1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier_with_ties2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::TestLogitsTransforms::test_top_p_modifier_with_ties3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::BinarySearchTest::test_float32_binary_search ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::BinarySearchTest::test_int32_binary_search ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/logit_modifiers_test.py::BinarySearchTest::test_int32_binary_search_extreme_predicates ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraLinearTest::test_alpha_is_zero ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraLinearTest::test_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode3 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVLinearTest::test_extend_step ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers48 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVLinearTest::test_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVLinearTest::test_prefill_states ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraMultiheadOutputLinearTest::test_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers49 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_forward_torch6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/lora_test.py::LoraFusedQKVAdapterTest::test_initialization ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers50 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_accuracy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_binary_cross_entropy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_binary_cross_entropy_zero_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_with_label_smoothing ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_with_less_than_0_label_smoothing_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_with_greater_than_1_label_smoothing_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_with_0_num_classes_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_with_less_than_0_z_loss_scale_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers51 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_z_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_soft_target_gradient ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_soft_target_with_z_loss_gradient ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers52 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_binary_cross_entropy_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_binary_cross_entropy_single ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_valid_targets ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cross_entropy_soft_target_labels ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds0-targets0-expected0-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds1-targets1-expected1-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds2-targets2-expected2-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds3-targets3-expected3-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds4-targets4-expected4-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds5-targets5-expected5-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds6-targets6-expected6-NaN-None] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_mean_squared_error[preds7-targets7-expected7-mask7-weights7] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_l1_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers53 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_bilinear_mean_squared_error ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_asymmetric_contrastive_loss_from_logits ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_asymmetric_contrastive_loss_from_logits_with_paddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_asymmetric_contrastive_loss_from_logits_with_soft_labels ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers54 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_asymmetric_contrastive_loss_from_features ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_asymmetric_contrastive_loss_from_features_with_paddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_asymmetric_contrastive_loss_from_features_with_soft_labels ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_symmetric_contrastive_loss_from_features ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_symmetric_contrastive_loss_from_logits_with_paddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_symmetric_contrastive_loss_from_logits_with_soft_labels ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_symmetric_contrastive_loss_from_features_with_paddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_symmetric_contrastive_loss_from_features_with_soft_labels ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_contrastive_logits_error ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_categorical_hinge_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers55 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_focal_loss[0] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_focal_loss[1] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_focal_loss[3] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[None-0-sum] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[None-0-mean] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[-1-0-sum] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[-1-0-mean] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[-1-1-sum] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[-1-1-mean] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[-1-3-sum] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_huber_loss[-1-3-mean] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_flops_loss[embedding_shape0] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_flops_loss[embedding_shape1] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_flops_loss[embedding_shape2] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers56 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_flops_loss_with_paddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_large_margin_loss_1_0_equals_cross_entropy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_large_margin_loss_larger_margin_increases_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_large_margin_loss_larger_scale_increases_mistake_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_large_margin_loss_returns_accuracy_of_valid ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_giou_loss_random_input[none-1e-07] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_giou_loss_random_input[sum-1e-07] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_giou_loss_random_input[mean-1e-07] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_giou_loss_random_input[sum-0.001] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers57 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_giou_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cosine_similarity_without_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_cosine_similarity_with_mask ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_negative_cosine_similarity_loss_against_torch ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_kl_divergence ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers58 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_koleo_loss_wo_norm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_koleo_loss_w_norm ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::test_koleo_loss_zero_dist ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers59 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::PairwiseLossFunctionsTest::test_2positive_1negative ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::PairwiseLossFunctionsTest::test_ignore_padding ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::PairwiseLossFunctionsTest::test_multiple_pairs ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::PairwiseLossFunctionsTest::test_pairwise_ranking_loss_3positive_2negative ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::PairwiseLossFunctionsTest::test_single_pair ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_reduce_loss0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_reduce_loss1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_reduce_loss2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_reduce_loss3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_reduce_loss4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_reduce_loss5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_small_sample_weights0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_small_sample_weights1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/loss_test.py::ReduceLossTest::test_small_sample_weights2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode4 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers60 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_classification_auc ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers61 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_classification_auc_one_input_label ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_classification_auc_same_prediction ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_classification_auc_zero_weight ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_classification_non_binary_label ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers62 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers63 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers64 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers65 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_binary_clf_curve_custom0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_brier_score0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_brier_score1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_confusion_matrix ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_confusion_matrix_validation ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_f_score0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers66 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers67 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_f_score1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_f_score2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_f_score_validation ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers68 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve_no_tps0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_curve_no_tps1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers69 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_f_score0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_f_score1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_precision_recall_f_score2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::TestMetrics::test_roc_curve ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::MultiLabelMetricCalculatorTest::test_binary_label ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers70 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_classification_test.py::MultiLabelMetricCalculatorTest::test_multi_label ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers71 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers72 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode5 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers73 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers74 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers75 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers76 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef10 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers77 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers78 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef11 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers79 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef12 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers80 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers81 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef13 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers82 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef14 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers83 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef15 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers84 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers85 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode6 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers86 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers87 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers88 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef16 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers89 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef17 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers90 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers91 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers92 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef18 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers93 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers94 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef19 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers95 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers96 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef3 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers97 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers98 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode7 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_layers99 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef4 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb100 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb101 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef5 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb102 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb103 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb104 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb105 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef6 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/deberta_test.py::DeBERTaEncoderTest::test_rel_emb106 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_similarity_bias_2d ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKRecallTest::test_output_value0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKRecallTest::test_output_value1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKRecallTest::test_output_value2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef7 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::test_average_precision_at_k ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef8 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef9 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_matthews_corrcoef_validation ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k_with_ties0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_pearson_corrcoef ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_pearson_corrcoef_validation ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_rankdata ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k_with_ties1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k_with_ties2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_ndcg_at_k_with_ties3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_correlation_test.py::TestMetrics::test_spearman_corrcoef ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::T5GLUEMetricsTest::test_against_t5 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_tie_averaged_dcg0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_tie_averaged_dcg1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::NDCGTest::test_tie_averaged_dcg2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::test_average_rank ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::test_average_rank_with_no_relevant_item_query ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::test_mrr ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::test_mrr_with_no_relevant_item_query ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::CalculateMeanMetricTest::test_calculate_accuracy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::CalculateMeanMetricTest::test_calculate_mean_average_precision ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricCalculatorTest::test_calculate_matthews_corr ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::CalculateMeanMetricTest::test_calculate_recall ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::CalculateMeanMetricTest::test_raises_on_missing_names ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode8 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricCalculatorTest::test_calculate_pearson_corr ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_text_dual_encoder_test.py::TextDualEncoderMetricCalculatorTest::test_calculate_metrics ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::OutputCollectionTest::test_module_add_summary_image ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/module_test.py::OutputCollectionTest::test_output_collection_children ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::OutputCollectionTest::test_output_collection_update ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::InvocationContextTest::test_context_output_collection ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::InvocationContextTest::test_context_stack ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::InvocationContextTest::test_context_stack_mutlithread ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::InvocationContextTest::test_none_prng_key ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ModuleTest::test_get_shared_module ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ModuleTest::test_invoking_grandchildren ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ModuleTest::test_multiple_shared_modules_from_ancestors ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ModuleTest::test_parent_children ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ModuleTest::test_shared_modules ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ScanInContextTest::test_basic ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ScanInContextTest::test_context ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/module_test.py::ScanInContextTest::test_drop_output ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multi_stream_model_test.py::MultiStreamPipelineTest::test_fusion_network ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multi_stream_model_test.py::MultiStreamPipelineTest::test_loss_weight ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multi_stream_model_test.py::MultiStreamPipelineTest::test_multi_stream_pipeline ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multi_stream_model_test.py::MultiStreamPipelineTest::test_overwrite ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multi_stream_model_test.py::MultiStreamPipelineTest::test_single_stream_forward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multi_stream_model_test.py::MultiStreamPipelineTest::test_stream_encoder ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_glue_test.py::GLUEMetricAccumulatorTest::test_glue_metric_accumulator8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_counts ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_output_value7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/metrics_retrieval_test.py::TopKAccuracyTest::test_similarity_bias ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adam_optimizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adam_optimizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_optimizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_optimizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_optimizer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_update_schedule0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_update_schedule1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_update_schedule2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_update_schedule3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_update_schedule4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_decoupled_update_schedule5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_multiply_by_parameter_scale0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_multiply_by_parameter_scale1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_optimizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_optimizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adamw_optimizer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_clip_by_block_rms0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_clip_by_block_rms1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_model_forward_with_masked_pos0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_model_forward_with_masked_pos1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_multiway_transformer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_multiway_transformer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_ema_parity9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_gradient_clipping8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_l2_regularizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_l2_regularizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_l2_regularizer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_l2_regularizer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_multiway_transformer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer_dtype0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer_dtype1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer_dtype2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer_dtype3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer_dtype4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_lion_optimizer_dtype5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_param_ema0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_param_ema1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_param_ema2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_param_ema3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_param_ema4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_param_ema5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_partition_fn9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_scale_by_param_block_rms0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_scale_by_param_block_rms1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_multiway_transformer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_scale_by_trust_ratio ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_sgd_optimizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_sgd_optimizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_sgd_optimizer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_decay_per_param_scales_adafactor_bias_0.2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_decay_per_param_scales_adamw_bias_0.2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_decay_per_param_scales_bias_0.5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_decay_per_param_scales_no_per_param_scale ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_decay_per_param_scales_sgd_bias_0.2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_scaling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_weight_scaling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_attention0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_attention1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_attention2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_attention3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_embeddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_decode9 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestEncoderDecoder::test_tied_lm_head_differs_from_untied ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_prefill_states0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_encoder7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_feed_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_feed_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_feed_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_feed_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_layer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_layer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward3 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_model0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward4 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_bert_model1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_embedding ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_layer_norm0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_layer_norm1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_linear ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_multihead_input_linear0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_multihead_input_linear1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstHF::test_forward8 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_roberta_embeddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_roundtrip0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::ParameterTest::test_roundtrip1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstT5X::test_against_t5x0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_prefill_states1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_decoder_test.py::TestAgainstT5X::test_against_t5x1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_stacked_with_multiway_transformer_layer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoder::test_against_hf_encoder ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_stacked_with_multiway_transformer_layer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoder::test_dropout_rate ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5ModelConverterTest::test_roundtrip7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoder::test_embeddings0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::HFGPT2ModelConverterTest::test_roundtrip0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::HFGPT2ModelConverterTest::test_roundtrip1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_disentangled_self_attention_roundtrip0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_disentangled_self_attention_roundtrip1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/multiway_transformer_test.py::ModelTest::test_transformer_extend_step ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoder::test_embeddings1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/neural_retrieval_test.py::TestDPRQuestionEncoder::test_dpr ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/neural_retrieval_test.py::TestDPRContextEncoder::test_dpr ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/normalize_test.py::test_l2_normalize[shape0--1] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoder::test_embeddings2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/normalize_test.py::test_l2_normalize[shape1-1] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/normalize_test.py::test_l2_normalize[shape2-2] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/normalize_test.py::test_l2_normalize[shape3-0] ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_beta_schedules0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_beta_schedules1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_beta_schedules2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_beta_schedules3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_optimizer9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/optimizers_test.py::OptimizerTest::test_adafactor_weight_decay15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_average_pooling_exception0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_average_pooling_exception1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestCausalEncoder::test_extend_step0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_first_n_pooling9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::DeBERTaModelConverterTest::test_model_roundtrip7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_last_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_last_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestCausalEncoder::test_extend_step1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_max_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_max_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestCausalEncoder::test_extend_step2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::TestHFMultiStreamTextEmbeddingModel::test_axlearn_to_torch0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestCausalEncoder::test_extend_step3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::TestHFMultiStreamTextEmbeddingModel::test_axlearn_to_torch1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_pooling_with_projection9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_codebook_initializer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_compute_code_pplx ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoderModel::test_encoder_model_with_head_config_variation0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_quantize0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_quantize1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::TestHFMultiStreamTextEmbeddingModel::test_axlearn_to_torch2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_attention0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_attention1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_decoder0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_decoder1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_dense ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_embedding ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_encoder0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_encoder1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_encoder_decoder0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_encoder_decoder1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_encoder_decoder2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_encoder_decoder3 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_ff ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_layer_norm ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_rel_pos_emb0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_rel_pos_emb1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_converter_test.py::T5XModelConverterTest::test_parameters_from_t5x_transformer_layer ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_bias0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_bias1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_bias2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_init_by_param_name_add ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_init_by_param_name_order ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_init_by_param_name_update ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::DefaultInitializerTest::test_scale ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_quantize2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_quantize3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::HelpersTest::test_quantize4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::WeightInitializerTest::test_none_fan ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/encoder_test.py::TestEncoderModel::test_encoder_model_with_head_config_variation1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::PerGroupInitializerTest::test_constant_init ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::PerGroupInitializerTest::test_per_group_initialization0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_backward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_backward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_backward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_backward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::PerGroupInitializerTest::test_per_group_initialization1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::PerGroupInitializerTest::test_single_group ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::FanAxesTest::test_append_axis ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::FanAxesTest::test_eq ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::FanAxesTest::test_maybe_prepend_axis ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::FanAxesTest::test_normalize ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/param_init_test.py::FanAxesTest::test_prepend_axis ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/pipeline_test.py::TransposeTest::test_transpose_functions ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_classification_test.py::ClassificationMetricCalculatorTest::test_classification_metrics6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/pipeline_test.py::PipelineTest::test_pipeline0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_forward4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CLIPRetrievalMetricCalculatorTest::test_clip_generate_labels ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::RandomVectorQuantizerTest::test_forward5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CLIPRetrievalMetricCalculatorTest::test_clip_retrieval_metric_calculator0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/pipeline_test.py::PipelineTest::test_pipeline1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CLIPRetrievalMetricCalculatorTest::test_clip_retrieval_metric_calculator1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/pipeline_test.py::PipelineTest::test_pipeline_prebuilt0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CLIPRetrievalMetricCalculatorTest::test_clip_retrieval_metric_calculator2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/pipeline_test.py::PipelineTest::test_pipeline_prebuilt1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_backward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward_with_normalization0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward_with_normalization1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward_with_normalization2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::KmeansVectorQuantizerTest::test_forward_with_normalization3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::GumbelSoftmaxVectorQuantizerTest::test_backward ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::GumbelSoftmaxVectorQuantizerTest::test_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::GumbelSoftmaxVectorQuantizerTest::test_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/quantizer_test.py::GumbelSoftmaxVectorQuantizerTest::test_forward_against_fairseq ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_separate_query_index0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_separate_query_index1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_attention_pooling7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_average_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/poolings_test.py::PoolingTest::test_average_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_separate_query_index2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_separate_query_index3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_compute_metrics_with_prefix ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat_prebuilt_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::EmbeddingRetrievalMetricCalculatorTest::test_get_pairwise_distances_sqr ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat_prebuilt_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat_prebuilt_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_forward_vs_layerwise0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_repeat_prebuilt_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CxcImageRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_shared_module0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_shared_module1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CxcImageRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_shared_module2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/repeat_test.py::RepeatTest::test_shared_module3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CxcImageRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::CxcImageRetrievalMetricCalculatorTest::test_compute_metrics_same_query_index3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::LSTMTest::test_lstm_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_forward_vs_layerwise1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::LSTMTest::test_lstm_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/eval_retrieval_test.py::KnnMetricCalculatorTest::test_compute_metrics ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::LSTMTest::test_lstm_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_forward_vs_layerwise2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_layer_dim ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::LSTMTest::test_lstm_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_eval_policy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_min_step ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_output_writer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_vs_repeat_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_output_writer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_spmd_evaler0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_vs_repeat_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_repeat_forward_vs_layerwise0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_spmd_evaler1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_spmd_evaler2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_spmd_evaler3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::EvalerTest::test_spmd_evaler4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::ModelSummaryAccumulatorTest::test_accumulated_summaries_match ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_dependencies6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_stack_vs_repeat_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_adafactor_decay_rate ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_adafactor_schedule ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_constant ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_constant_with_linear_warmup ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_cosine_with_linear_warmup0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_cosine_with_linear_warmup1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_different_calculator_same_metric_name ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_cosine_with_linear_warmup2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_decay_bias_correction ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_ema_schedule ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_exponential ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_inverse_sqrt ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_linear ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_linear_schedule_with_warmup ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_sqrt ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_stepwise ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_repeat_forward_vs_layerwise1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/schedule_test.py::ScheduleTest::test_t5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::CompositeMetricCalculatorTest::test_multiple_summaries_saved ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/evaler_test.py::GlobalEvalerTest::test_alt_predict ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/splade_test.py::SpladePoolingTest::test_splade_pooling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/splade_test.py::SpladePoolingTest::test_splade_pooling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/rnn_test.py::StackedRNNTest::test_repeat_forward_vs_layerwise2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/splade_test.py::SpladePoolingTest::test_splade_pooling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::HuggingFacePreTrainedBuilderTest::test_converter1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::HuggingFacePreTrainedBuilderTest::test_converter2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/splade_test.py::SpladePoolingTest::test_splade_pooling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::MergeStateConverterTest::test_converter_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::MergeStateConverterTest::test_converter_string_and_enum_args ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ConverterTest::test_chain ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::GetBuilderTest::test_get_builder0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::GetBuilderTest::test_get_builder1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ChainBuilderTest::test_chain_builder_error ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ChainBuilderTest::test_simple_chain_builder ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/factorized_rms_test.py::FactorizedRMSTest::testParity0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/factorized_rms_test.py::FactorizedRMSTest::testParity1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/factorized_rms_test.py::FactorizedRMSTest::testParity2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::HuggingFacePreTrainedBuilderTest::test_repeat ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/factorized_rms_test.py::FactorizedRMSTest::testParity3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/gda_test.py::GDATest::test_host_array_to_gda9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/host_array_test.py::HostArrayTest::test_global_host_array_conversion0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/host_array_test.py::HostArrayTest::test_global_host_array_conversion1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/host_array_test.py::HostArrayTest::test_global_host_array_conversion2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/host_array_test.py::HostArrayTest::test_global_host_array_conversion3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_jsonl_feature6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_merge_with_string_tensors_bad_input0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::HuggingFacePreTrainedBuilderTest::test_traverse_and_set_state ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_cross_scopes ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_cross_scopes_many ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_only_linear_weight ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_scope_none ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_source_data_dir0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_source_data_dir1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::ModelStateScopeConverterTest::test_target_scope_only ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::EmaParamsConverterTest::test_ema_params_converter0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::EmaParamsConverterTest::test_ema_params_converter1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_test.py::SummaryTest::test_add_summary_image ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_test.py::SummaryTest::test_callback_summary ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/summary_test.py::SummaryTest::test_validate ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_test.py::SummaryTest::test_with_pjit_out_shardings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_writer_test.py::SummaryWriterTest::test_add_summary ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_writer_test.py::SummaryWriterTest::test_log_config ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_writer_test.py::CompositeWriterTest::test_multiple_summary_writers ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/summary_writer_test.py::WandBWriterTest::test_add_summary ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/summary_writer_test.py::WandBWriterTest::test_resume ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/test_utils_test.py::CleanHLOTest::test_clean_hlo_regex3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingStreamEncoder::test_missing_output_proj ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingStreamEncoder::test_positive_and_negative_inputs ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingStreamEncoder::test_positive_inputs_only ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline_summary_writer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingStreamEncoder::test_positive_inputs_only_with_projection ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline_with_string_tensors0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline_with_string_tensors1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline_with_string_tensors2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingAsymmetricContrastiveLossLayer::test_complex_encoder_name0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_pipeline_with_string_tensors3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingAsymmetricContrastiveLossLayer::test_complex_encoder_name1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingAsymmetricContrastiveLossLayer::test_complex_encoder_name2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingAsymmetricContrastiveLossLayer::test_no_negative_embeddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingAsymmetricContrastiveLossLayer::test_positive_and_negative_embeddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingAsymmetricContrastiveLossLayer::test_shape_assertion ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestRankingPairwiseLossLayer::test_ranking_pairwise_loss ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner16 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestTextEmbeddingDualEncoder::test_simple ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestSiameseTextEmbeddingDualEncoder::test_simple ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/text_dual_encoder_test.py::TestFLOPsLossLayer::test_flops_loss0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/traceback_util_test.py::TracebackUtilTest::test_annotate_stack ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/traceback_util_test.py::TracebackUtilTest::test_excepthook_patch ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/traceback_util_test.py::TracebackUtilTest::test_in_context_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/traceback_util_test.py::TracebackUtilTest::test_walk_annotated_tb ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode17 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_checkpoint_policy0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/inference_test.py::InferenceTest::test_runner9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_log_probs_from_blank_and_tokens2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_log_probs_from_blank_and_tokens3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_logits_to_log_probs9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_random0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_random1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_random2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_checkpoint_policy1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_random3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_session <- ../usr/local/lib/python3.10/site-packages/tensorflow/python/framework/test_util.py ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_single_route ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_tilting ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_checkpoint_policy2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_transducer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_checkpoint_policy3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_composite_learner ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_last_step_checkpoint_policy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_non_partitioned_model ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_transducer_loss_and_grad ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_as_numpy_array ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_as_tensor ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_cast_floats0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_cast_floats1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_check_jax_type ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_check_param_shape_alignment ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_complete_partition_spec_tree ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_copy_recursively ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_count_model_params ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_dispatch_shards_input_batch0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_dispatch_shards_input_batch1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_dispatch_subsets_input_batch ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_flatten_items ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_get_and_set_recursively ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_input_partition_spec0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_input_partition_spec1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_split_prng_key ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_tree_paths ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_vdict_ref_count ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_vdict_serialization ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_vdict_tree_def ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_vectorized_tree_map ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::TreeUtilsTest::test_vectorized_tree_map_with_empty_vdict ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::SimilarNamesTest::test_similar_names0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::SimilarNamesTest::test_similar_names1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::SimilarNamesTest::test_similar_names2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::SimilarNamesTest::test_similar_names3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::SimilarNamesTest::test_similar_names4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::SimilarNamesTest::test_similar_names5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ContextManagerTest::test_prng_impl ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ContextManagerTest::test_runtime_checks ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadParamInitSpecsRecursivelyTest::test_delegates ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadParamInitSpecsRecursivelyTest::test_flatten ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadParamInitSpecsRecursivelyTest::test_nested ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadParamInitSpecsRecursivelyTest::test_ordering ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadParamInitSpecsRecursivelyTest::test_repeat_layer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_add_decayed_weights0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_add_decayed_weights1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_add_decayed_weights2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_add_decayed_weights3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_l2_regularizer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_l2_regularizer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_learner_update_types ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_repeat_layer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ReadPerParamSettingsTest::test_two_per_param_scales ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ValidateFloatDtypeTest::test_validate_float_dtype__for_valid_dtypes0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ValidateFloatDtypeTest::test_validate_float_dtype__for_valid_dtypes1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ValidateFloatDtypeTest::test_validate_float_dtype_raises_for_invalid_dtypes0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ValidateFloatDtypeTest::test_validate_float_dtype_raises_for_invalid_dtypes1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::ValidateFloatDtypeTest::test_validate_float_dtype_raises_for_invalid_dtypes2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DataDirTest::test_exception_handling ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DataDirTest::test_get_and_set0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DataDirTest::test_get_and_set1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DataDirTest::test_get_and_set2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DataDirTest::test_get_and_set3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DataDirTest::test_get_and_set4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::MatchRegexRulesTest::test ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::PruneTreeTest::test ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_gpu0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_gpu1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_gpu2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_multi_slice_tpuv40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_multi_slice_tpuv41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_multi_slice_tpuv5e0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_multi_slice_tpuv5e1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_tpuv40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_tpuv41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::DeviceMeshTest::test_create_device_mesh_tpuv42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_test.py::InferMeshShapeTest::test_infer_mesh_shape_config ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode18 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_text_dual_encoder_test.py::TestBertStreamEncoderConfig::test_bert_stream_encoder_config0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_text_dual_encoder_test.py::TestBertStreamEncoderConfig::test_bert_stream_encoder_config1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_tf_test.py::MaskedFillTest::test_basic0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_tf_test.py::MaskedFillTest::test_basic1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/utils_tf_test.py::MaskedFillTest::test_basic2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_drop_token_features0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_prune_backwards_compat ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_prune_empty_state ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_drop_token_features1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_drop_token_features2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_drop_token_features3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_drop_token_features4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_restore_from_builder0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_drop_token_features5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_restore_from_builder1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_encoder1d_scaling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_encoder1d_scaling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_encoder1d_scaling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_encoder1d_scaling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_run_builder0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_encoder1d_scaling4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_encoder1d_scaling5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_model_with_output_proj ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_run_builder1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_scaling_inputs_wrt_pos_embedding0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_scaling_inputs_wrt_pos_embedding1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_scaling_inputs_wrt_pos_embedding2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_sequence_to_space_with_scaling7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_keep_target ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_stride ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_stride_error ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_use_pos_emb0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_use_pos_emb1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_features0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_should_compute_gradients_default ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_features1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_features2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_features3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_forward_with_is_masked0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_forward_with_is_masked1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_global_feature_extraction0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_should_compute_gradients_skip_all ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_global_feature_extraction1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vision_transformer_test.py::ModelTest::test_vit_global_feature_extraction2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_byte_decode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_byte_decode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_byte_decode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_byte_encode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_byte_encode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_byte_encode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_chunk_byte_encode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_chunk_byte_encode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_chunk_byte_encode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_chunk_byte_encode_fake_data3 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_chunk_byte_encode_fake_data4 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_chunk_byte_encode_fake_data5 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_as_control_map_fake_data ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_batch_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_batch_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_batch_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_decode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_encode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_encode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_should_compute_gradients_skip_bias ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_encode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_extra_ids ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_id_map0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_id_map1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_id_map2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_id_map_validation ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_py_decode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_py_decode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_py_decode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_py_encode_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_py_encode_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_py_encode_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_regex_split_fake_data0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_regex_split_fake_data1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_regex_split_fake_data2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_tokenize_detokenize_roundtrip0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_tokenize_detokenize_roundtrip1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/vocabulary_bpe_test.py::BPEVocabularyTest::test_tokenize_detokenize_roundtrip2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode19 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_stop_on_exception ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward10 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward11 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward12 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward13 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward14 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward15 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward16 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward17 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward18 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward19 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_trainer0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward20 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward21 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward22 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward23 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward24 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward25 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward26 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward27 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_trainer1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward6 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward7 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward8 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_backward9 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward10 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward11 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward12 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward13 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward14 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward15 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward16 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward17 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward18 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward19 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_trainer2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward20 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward21 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward22 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward23 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward24 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward25 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward26 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward27 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward6 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward7 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward8 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/flash_attention/layer_test.py::TestFlashAttention::test_forward9 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/ops/_optimization_barrier_test.py::OptimizationBarrierTest::test_forward_optimization_barrier_grad ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/ops/_optimization_barrier_test.py::OptimizationBarrierTest::test_forward_optimization_barrier_vmap ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/ops/_optimization_barrier_test.py::OptimizationBarrierTest::test_foward_optimization_barrier ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_trainer3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_trainer4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::TrainerTest::test_trainer5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/trainer_test.py::SelectMeshConfigTest::test_select_mesh_config ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_apply_paddings ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_apply_paddings_check ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_log_probs_from_blank_and_tokens0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/transducer_test.py::AlignmentTest::test_log_probs_from_blank_and_tokens1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode20 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_non_existent_strategy ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode21 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode22 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_replace_target_prefix_with_source ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode23 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode24 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode25 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode26 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode27 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode28 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode29 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode30 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode31 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode32 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation_incompatible_shape0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode33 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode34 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode35 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode36 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation_incompatible_shape1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode37 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode38 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode39 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation_incompatible_shape2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode40 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode41 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation_incompatible_shape3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode42 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode43 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode44 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation_target_longer_than_source0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode45 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode46 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode47 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::PosEmbeddingConverterTest::test_truncation_target_longer_than_source1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::TestConv2DStateBuilders::test_conv2d_kernel_reducer ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::TestConv2DStateBuilders::test_conv2d_to_conv3d ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::BaseConverterFromPretrainedModelTest::test_mesh_shape ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::DiffusersPretrainedBuilderTest::test_load_local_ckpts ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/state_builder_test.py::HuggingFacePreTrainedBuilderTest::test_converter0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_buckets_against_t5x0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_buckets_against_t5x1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_buckets_against_t5x2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_buckets_against_t5x3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_buckets_against_t5x4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_buckets_against_t5x5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::RelativePositionTest::test_mtf_buckets ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::T5EncoderTest::test_against_t5_encoder ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::T5EncoderDecoderModelTest::test_against_t5_encoder_decoder_model0 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/t5_test.py::T5EncoderDecoderModelTest::test_against_t5_encoder_decoder_model1 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/t5_test.py::T5EncoderDecoderModelTest::test_against_t5_encoder_decoder_model2 ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::T5EncoderDecoderModelTest::test_pjit ",
        "status": "FAILED"
    },
    {
        "name": "axlearn/common/t5_test.py::OneHotGatherTest::test_one_hot_against_all_gather0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::OneHotGatherTest::test_one_hot_against_all_gather1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::OneHotGatherTest::test_one_hot_against_all_gather2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/t5_test.py::OneHotGatherTest::test_one_hot_against_all_gather3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/test_utils_test.py::CleanHLOTest::test_clean_hlo_real_hlo ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/test_utils_test.py::CleanHLOTest::test_clean_hlo_regex0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/test_utils_test.py::CleanHLOTest::test_clean_hlo_regex1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/test_utils_test.py::CleanHLOTest::test_clean_hlo_regex2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_decode9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_dropout_rate0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_dropout_rate1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_dropout_rate2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_extend_step7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::TestDecoder::test_tied_lm_head_differs_from_untied ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::UtilsTest::test_segment_ids_from_causal_input_ids0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoder_test.py::UtilsTest::test_segment_ids_from_causal_input_ids1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_add_decoding_dim ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_init_with_inputs7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode_force_prefix0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode_force_prefix1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode_force_prefix_eos ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode_no_prefix0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode_no_prefix1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_decode_with_brevity_penalty ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_prefill9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_beam_search_with_path_merger ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_brevity_penalty_fn ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_compute_merge_matrix_by_prefixes ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_flatten_decoding_dim ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_gather_beams ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_infer_initial_time_step0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_infer_initial_time_step1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_merge_prefixes ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_eos_stopping_condition7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_init ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_prefill0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_prefill1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_prefill2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_prefill3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_with_complex_stopping_condition0 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_with_complex_stopping_condition1 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_sample_decode_with_complex_stopping_condition2 ",
        "status": "SKIPPED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence10 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence11 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence12 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence13 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence14 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence15 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence3 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence4 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence5 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence6 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence7 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence8 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence9 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_stop_on_subsequence_raises_on_empty_sequence ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_unflatten_decoding_dim0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/decoding_test.py::DecodeTest::test_unflatten_decoding_dim1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distilbert_test.py::TestDistilBertModel::test_distilbert ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::KLDistillationTest::test_distillation_model_with_kldivergence ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::KLDistillationTest::test_distillation_model_with_negative_cosine_similarity ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::KLDistillationTest::test_kl_divergence_metric0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::KLDistillationTest::test_kl_divergence_metric1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::KLDistillationTest::test_negative_cosine_similarity_metric0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::KLDistillationTest::test_negative_cosine_similarity_metric1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::DeiTDistillationTest::test_deit_distillation_metric0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::DeiTDistillationTest::test_deit_distillation_metric1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::DeiTDistillationTest::test_deit_distillation_metric2 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::DeiTDistillationTest::test_deit_distillation_metric_with_padding0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::DeiTDistillationTest::test_deit_distillation_metric_with_padding1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/distillation_test.py::DeiTDistillationTest::test_deit_distillation_model ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestTimeStepEmbedding::test_time_step_embed0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestTimeStepEmbedding::test_time_step_embed1 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestLabelEmbedding::test_label_embed0 ",
        "status": "PASSED"
    },
    {
        "name": "axlearn/common/dit_test.py::TestLabelEmbedding::test_label_embed1 ",
        "status": "PASSED"
    }
]